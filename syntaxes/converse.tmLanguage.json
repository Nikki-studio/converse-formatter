{
  "name": "Converse",
  "fileTypes": ["converse", "cvs", "cv", "hv", "hvs"],
  "scopeName": "source.converse",
  "patterns": [
    {
      "name": "keyword.control.converse",
      "match": "\\b(main|print|input|output|debug|as|if|else|match|while|for|return|in|protocol|class|try|except|out)\\b"
    },
    {
      "name": "punctuation.separator.colon.converse",
      "match": ":"
    },
    {
      "name": "keyword.operator.binary-shifter.converse",
      "match": "(<<|>>)"
    },
    {
      "name": "keyword.operator.logical.converse",
      "match": "(==|!=|<=|>=|&&|\\|\\||!|\\?|(?<!&)\\&(?!&)|(?<!\\|)\\|(?!\\|))"
    },
    {
      "name": "keyword.operator.assignment.converse",
      "match": "(=|\\+=|-=|\\*=|/=|%=|#=)"
    },
    {
      "name": "keyword.operator.arithmetic.converse",
      "match": "(?<!\\+)[+](?!\\+)|(?<!-)[-](?!-)|(?<!\\*)\\*(?!\\*)|(?<!/)\\/(?!/)|(?<!%)%(?!%)|#"
    },
    {
      "name": "keyword.macro.converse",
      "match": "~(from|def|ifdef|ifndef|get|end|macro|use|define)\\b"
    },
    {
      "name": "storage.modifier.decorator.converse",
      "match": "@[a-zA-Z_][a-zA-Z0-9_]*"
    },
    {
      "name": "comment.line.double-slash.converse",
      "match": "//.*$"
    },
    {
      "name": "comment.block.converse",
      "begin": "/\\*",
      "end": "\\*/"
    },
    {
      "name": "string.quoted.double.converse",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.converse",
          "match": "\\\\[nrt\"'\\\\]"
        },
        {
          "name": "variable.other.interpolation.converse",
          "match": "\\$\\{[^}]+\\}"
        }
      ]
    },
    {
      "name": "string.quoted.single.converse",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "name": "constant.character.escape.converse",
          "match": "\\\\[nrt\"'\\\\]"
        }
      ]
    },
    {
      "name": "string.quoted.backtick.converse",
      "begin": "`",
      "end": "`"
    },
    {
      "name": "constant.language.boolean.converse",
      "match": "\\b(true|false)\\b"
    },
    {
      "name": "constant.numeric.converse",
      "match": "\\b(0x[0-9A-Fa-f]+|[0-9]+(\\.[0-9]+)?([eE][-+]?[0-9]+)?)\\b"
    },
    {
      "name": "storage.type.converse",
      "match": "\\b(bool|int|float|char|string|void|vector|protocol|obj|dict|set|list|class|enum|union|struct|typedef)\\b"
    },
    {
      "name": "constant.other.format-specifier.converse",
      "match": "%[sibcfdv]"
    },
    {
      "name": "punctuation.brackets.converse",
      "match": "[\\[\\]\\{\\}\\(\\)]"
    },
    {
      "name": "punctuation.separator.converse",
      "match": "[,;]"
    },
    {
      "name": "variable.other.identifier.converse",
      "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
    },
    {
      "name": "invalid.illegal.converse",
      "match": "[#^]+"
    }
  ],
  "repository": "https://github.com/Nikki-studio/converse-formatter.git",
  "uuid": "converse-98fa0e2e-7ec3-11ee-b962-0242ac120002"
}
